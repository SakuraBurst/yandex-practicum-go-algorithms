/**
id –≤ –∫–æ–Ω—Ç–µ—Å—Ç–µ 66950000 (—ç–ª–∏—Ç–Ω—ã–π id üòé)
-- –ü–†–ò–ù–¶–ò–ü –†–ê–ë–û–¢–´ --
–ü—Ä–∏–≤–µ—Ç! –ü–æ–ø–æ—Ç–µ–ª –Ω–∞–¥ –∑–∞–¥–∞—á–µ–π, —Å–∏–¥–µ–ª 2 –¥–Ω—è. –í –∏—Ç–æ–≥–µ –∫–∞–∫-—Ç–æ –æ–∑–∞—Ä–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ:) –†–µ—à–∏–ª —á–µ—Ä–µ–∑ –±–æ—Ä –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ (–ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –ø–æ—á–∏—Ç–∞–ª —Å–≤–æ–π –∫–∞–Ω–∞–ª,
—É–≤–∏–¥–µ–ª, —á—Ç–æ –º–Ω–æ–≥–∏–µ —Ç–∞–∫ –∏ —Ä–µ—à–∞—é—Ç). –°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ —Å—É—Ç—å –≤ —Ç–æ–º, —á—Ç–æ –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä–æ–∫–∏, –º—ã –∑–∞—Å–æ–≤—ã–≤–∞–µ–º –≤ –º–∞—Å—Å–∏–≤ dp —Ç–æ –∫–∞–∫–∏–µ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –ø—Ä–∏–≤–µ–ª–∏ –Ω–∞—Å –∫ —Ç–µ–∫—É—â–µ–º—É —Å–∏–º–≤–æ–ª—É.
–í—ã—á–∏—Å–ª—è–µ–º –º—ã —ç—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–æ–π, –≤–µ–¥—É—Ç –ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –ù–æ–¥—ã –∏–∑ dp[i - 1] –∫ —Ç–µ–∫—É—â–µ–º—É —Å–∏–º–≤–æ–ª—É. –¢–∞–∫–∂–µ, –¥–ª—è —Å–∞–º–æ–≥–æ –ø–µ—Ä–≤–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ –∏, –µ—Å–ª–∏ –≤ dp[i - 1] –µ—Å—Ç—å –Ω–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ —è–≤–ª—è—é—Ç—Å—è –∫–æ–Ω—Ü–∞–º–∏ –ø–æ–¥—Å—Ç—Ä–æ–∫,
—Ç–æ –º—ã –∏—â–µ–º —Å–∏–º–≤–æ–ª –≤ —Ä—É—Ç–æ–≤–æ–π –ù–æ–¥–µ –ë–æ—Ä–∞. –û—Ç–≤–µ—Ç –º—ã —É–∑–Ω–∞–µ–º –≤ dp[len(s) -1] - –µ—Å–ª–∏ –∫–∞–∫–æ–π-—Ç–æ –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤ –ø–æ–¥—Å—Ç—Ä–æ–∫,
–∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—à–µ–ª –∫ –∫–æ–Ω—Ü—É —Å—Ç—Ä–æ–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω—Ü–æ–º –ø–æ–¥—Å—Ç—Ä–æ–∫–∏, —Ç–æ —Ç–æ–≥–¥–∞ –æ—Ç–≤–µ—Ç "Yes", –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ "No"


-- –î–û–ö–ê–ó–ê–¢–ï–õ–¨–°–¢–í–û –ö–û–†–†–ï–ö–¢–ù–û–°–¢–ò --
–Ø –±–µ–∑ –ø–æ–Ω—è—Ç–∏—è, –∫–∞–∫ –æ–ø–∏—Å–∞—Ç—å —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –ø–æ—ç—Ç–æ–º—É –æ–ø–∏—à—É –≤–µ—Å—å –ø—É—Ç—å –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ —Å–æ –≤—Å–µ–º–∏ —à–∞–≥–∞–º–∏, —á—Ç–æ–±—ã —Å—É—Ç—å —Ö–æ—Ç—å –Ω–µ–º–Ω–æ–≥–æ –±—ã–ª–∞—è —è—Å–Ω–∞)
–ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º —É –Ω–∞—Å –µ—Å—Ç—å —Å—Ç—Ä–æ–∫–∞ s := abcdg –∏ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏
1 a
2 ab
3 abc
4 abcd
5 g

–ù–∞ –ø–µ—Ä–≤–æ–º —à–∞–≥–µ —É –Ω–∞—Å –≤ dp[0] —É –Ω–∞—Å —Ö—Ä–∞–Ω–∏—Ç—Å—è 'a' –ù–æ–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –≤–µ–¥–µ—Ç –≤ 'b' –ù–æ–¥—É –∫–∞–∫ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –ø–æ–¥—Å—Ç—Ä–æ–∫ 2,3,4 –∏ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω—Ü–æ–º –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ 1.
–¢–∞–∫ –∫–∞–∫ s[0] —è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω—Ü–æ–º –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ 1, –º—ã –∏—â–µ–º 'b' –≤ —Ä—É—Ç–æ–≤–æ–π –ù–æ–¥–µ, –Ω–æ —Ç–∞–º –Ω–∏—á–µ–≥–æ –Ω–µ—Ç, –ø–æ—ç—Ç–æ–º—É –º—ã –∫–ª–∞–¥–µ–º —Ç–æ–ª—å–∫–æ –ù–æ–¥—É 'b' –≤ dp[1]

–ù–∞ –≤—Ç–æ—Ä–æ–º —à–∞–≥–µ —É –Ω–∞—Å –≤ dp[1] —É –Ω–∞—Å —Ö—Ä–∞–Ω–∏—Ç—Å—è 'b' –ù–æ–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –≤–µ–¥–µ—Ç –≤ 'c' –ù–æ–¥—É –∫–∞–∫ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –ø–æ–¥—Å—Ç—Ä–æ–∫ 3,4 –∏ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω—Ü–æ–º –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ 2.
–¢–∞–∫ –∫–∞–∫ s[1] —è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω—Ü–æ–º –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ 2, –º—ã –∏—â–µ–º 'b' –≤ —Ä—É—Ç–æ–≤–æ–π –ù–æ–¥–µ, –Ω–æ —Ç–∞–º –Ω–∏—á–µ–≥–æ –Ω–µ—Ç, –ø–æ—ç—Ç–æ–º—É –º—ã –∫–ª–∞–¥–µ–º —Ç–æ–ª—å–∫–æ –ù–æ–¥—É 'c' –≤ dp[2]

...

–ù–∞ –ø—è—Ç–æ–º —à–∞–≥–µ —É –Ω–∞—Å –≤ dp[4] —É –Ω–∞—Å —Ö—Ä–∞–Ω–∏—Ç—Å—è 'd' –ù–æ–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –Ω–∏–∫—É–¥–∞ –Ω–µ –≤–µ–¥–µ—Ç –∏ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω—Ü–æ–º –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ 4.
–¢–∞–∫ –∫–∞–∫ s[4] —è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω—Ü–æ–º –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ 4, –º—ã –∏—â–µ–º 'g' –≤ —Ä—É—Ç–æ–≤–æ–π –ù–æ–¥–µ, –∏ –Ω–∞—Ö–æ–¥–∏–º! –ö–ª–∞–¥–µ–º –≤ dp[5] 'g' –ù–æ–¥—É.

'g' –ù–æ–¥–∞ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω—Ü–æ–º –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ 'g', –ø–æ—ç—Ç–æ–º—É —Å—Ç—Ä–æ–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞, –≤—ã–≤–æ–¥–∏–º "Yes"


-- –í–†–ï–ú–ï–ù–ù–ê–Ø –°–õ–û–ñ–ù–û–°–¢–¨ --
–ö–∞–∫ –≥–æ–≤–æ—Ä–∏–ª–æ—Å—å –≤ —Ç–µ–æ—Ä–∏–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ä–∞ —ç—Ç–æ O(l), –≥–¥–µ l ‚Äî —Å—É–º–º–∞—Ä–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–ª–æ–≤ –≤–æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ.

–í—ã—Å—á–∏—Ç—ã–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ—Å–Ω–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∑–∞ O(s), –≥–¥–µ s - –¥–ª–∏–Ω–Ω–∞ —Å—Ç—Ä–æ–∫–∏. –í –±–æ—Ä–µ –º—ã –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ –∏—â–µ–º —Ç–æ–ª—å–∫–æ 1 —Å–∏–º–≤–æ–ª, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∑–∞ O(1).
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –≤ dp[i - 1] –º–æ–∂–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –¥–æ s –ù–æ–¥
–ò—Ç–æ–≥–æ –ø–æ–ª—É—á–∞–µ–º O(l + (s^2))


-- –ü–†–û–°–¢–†–ê–ù–°–¢–í–ï–ù–ù–ê–Ø –°–õ–û–ñ–ù–û–°–¢–¨ --
–í —Å–∏–ª—É —Ç–µ—Ö –∂–µ –ø—Ä–∏—á–∏–Ω, —á—Ç–æ –∏ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å —Ä–∞–≤–Ω–∞, –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è, O(l^2)
*/

package crib

import (
	"bufio"
	"io"
	"os"
	"strconv"
	"unicode"
)

type Node struct {
	IsBlack bool
	Tree    PrefixTree
}

type PrefixTree map[string]*Node

type DP [][]*Node

func Crib(r io.Reader, w io.Writer) {
	reader := bufio.NewReader(r)
	s, _ := reader.ReadString('\n')
	s = s[:len(s)-1]
	nString, _ := reader.ReadString('\n')
	n, _ := strconv.Atoi(nString[:len(nString)-1])
	prefixesRoot := &Node{
		IsBlack: false,
		Tree:    PrefixTree{},
	}
	for i := 0; i < n; i++ {
		p, _ := reader.ReadString('\n')
		if unicode.IsSpace(rune(p[len(p)-1])) {
			addPrefix(prefixesRoot, p[:len(p)-1])
		} else {
			addPrefix(prefixesRoot, p)
		}

	}
	if prefixesRoot.Tree[string(s[0])] == nil {
		io.WriteString(w, "NO")
		return
	}
	dp := make(DP, len(s))
	dp[0] = append(dp[0], prefixesRoot.Tree[string(s[0])])
	for i := 1; i < len(s); i++ {
		c := string(s[i])
		var isSomeBlack bool
		dp[i], isSomeBlack = findNodes(dp[i-1], c)

		if isSomeBlack && prefixesRoot.Tree[c] != nil {
			dp[i] = append(dp[i], prefixesRoot.Tree[c])
		}

		if len(dp[i]) == 0 {
			break
		}
	}

	if someIsBlack(dp[len(s)-1]) {
		io.WriteString(w, "YES")
	} else {
		io.WriteString(w, "NO")
	}
}

func findNodes(n []*Node, char string) ([]*Node, bool) {
	var res []*Node
	isSomeBlack := false
	for _, v := range n {
		if v.IsBlack {
			isSomeBlack = true
		}
		if v.Tree[char] != nil {
			res = append(res, v.Tree[char])
		}
	}
	if len(res) == 0 {
		return res, isSomeBlack
	}
	return res, isSomeBlack
}

func someIsBlack(n []*Node) bool {
	for _, v := range n {
		if v.IsBlack {
			return true
		}
	}
	return false
}

func addPrefix(root *Node, s string) {
	for _, r := range s {
		_, ok := root.Tree[string(r)]
		if !ok {
			root.Tree[string(r)] = &Node{
				IsBlack: false,
				Tree:    PrefixTree{},
			}
		}
		root = root.Tree[string(r)]
	}
	root.IsBlack = true
}

func main() {
	Crib(os.Stdin, os.Stdout)
}
