/*
-- –ü–†–ò–ù–¶–ò–ü –†–ê–ë–û–¢–´ --
–∏–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ —è –∏–¥–∏–æ—Ç, —Ç—É—Ç –±—É–¥–µ—Ç 2 id
id –¥–ª—è BrokenSearch2 58471337
id –¥–ª—è BrokenSearch 58473495

–í –æ–±—â–µ–º, —ç—Ç–æ –∫–æ–Ω–µ—á–Ω–æ —Å–º–µ—à–Ω–æ. –Ø –¥–µ–ª–∞—é, –∫–∞–∫ –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è —Ä–∞–±–æ—á–µ–µ —Ä–µ—à–µ–Ω–∏–µ (BrokenSearch2), –∫–æ—Ç–æ—Ä–æ–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞ log n + log n –∞ –æ–Ω–æ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –≤—Ä–µ–º–µ–Ω–∏.
–ü–æ—Ç–æ–º, –ø–æ–¥—É–º–∞–≤ –µ—â–µ –ø–∞—Ä—É —á–∞—Å–æ–≤ —è –ø—Ä–∏–¥—É–º—ã–≤–∞—é —Ä–µ—à–µ–Ω–∏–µ BrokenSearch, –∫–æ—Ç–æ—Ä–æ–µ, —è —É–≤–µ—Ä–µ–Ω, —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞ log n —Ä–æ–≤–Ω–æ, –∏ –≤—Å–µ —Ä–∞–≤–Ω–æ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –≤—Ä–µ–º–µ–Ω–∏.
–ò –ø–æ—Ç–æ–º –ø—Ä–∏—Ö–æ–¥–∏—Ç –æ—Å–æ–∑–Ω–∞–Ω–∏–µ —Ç–æ–≥–æ, —á—Ç–æ —è –≤–æ –≤—Å–µ—Ö —ç—Ç–∏—Ö –ø–æ–ø—ã—Ç–∫–∞—Ö —Å—á–∏—Ç–∞–ª –ª–æ–≥–∞—Ä–∏—Ñ–º –æ—Ç n –≤ —Ü–∏–∫–ª–µ, —Ç–µ –ø–∏—Å–∞–ª
for i := 0; i < int(math.Log2(float64(len(arr)))); i++ {

}
–≤ –∏—Ç–æ–≥–µ –æ–∫–∞–∑–∞–ª–æ—Å—å, —á—Ç–æ –æ–±–∞ —Ä–µ—à–µ–Ω–∏—è —Ä–∞–±–æ—á–∏–µ, –æ –Ω–∏—Ö —è –∏ —Ä–∞—Å—Å–∫–∞–∂—É

BrokenSearch2
—ç—Ç–æ —Ä–µ—à–µ–Ω–∏–µ –º–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –±–æ–ª—å—à–µ, –Ω–µ —Å–º–æ—Ç—Ä—è –Ω–∞ —Ç–æ, —á—Ç–æ –æ–Ω–æ —Ç—Ä–∞—Ç–∏—Ç —á—É—Ç—å –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏. –°—É—Ç—å –ø—Ä–æ—Å—Ç–∞: —Å –ø–æ–º–æ—â—å—é –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ —è –∏—â—É —Å–∞–º—ã–π –º–∞–ª–µ–Ω—å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞
(–≤—ã—á–∏—Å–ª—è—é —Å–¥–≤–∏–≥), –∞ –ø–æ—Ç–æ–º —É–∂–µ –Ω–∞ —Å–∞–º–æ–º –º–∞—Å—Å–∏–≤–µ –ø—Ä–∏–º–µ–Ω—è—é –æ–±—ã—á–Ω—É—é –±–∏–Ω–∞—Ä–Ω—É—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É, –Ω–æ mid —Å–¥–≤–∏–≥–∞—é –Ω–∞ –∏–Ω–¥–µ–∫—Å –Ω–∞—á–∞–ª–∞ –º–∞—Å—Å–∏–≤–∞ —Å –ø–æ–º–æ—â—å—é mid + arrStart % len(arr).
–ü–æ–ª—É—á–∞–µ—Ç—Å—è —è –¥–ª—è —Å–¥–≤–∏–Ω—É—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –≤—ã—á–∏—Å–ª—è—é —Å–¥–≤–∏–≥, –∏ —Å–¥–≤–∏–≥–∞—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±–∏–Ω–∞—Ä–Ω–æ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏, —á—Ç–æ–±—ã –æ–Ω–∞ —Ä–∞–±–æ—Ç–∞–ª–∞ –∫–∞–∫ –æ–±—ã—á–Ω–æ

BrokenSearch
—Ç—É—Ç —Ä–µ—à–µ–Ω–∏–µ –ø–æ—Å–ª–æ–∂–Ω–µ–µ, –Ω–æ —Ç–æ–∂–µ –¥–æ–≤–æ–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–æ–µ. –ó–∞ –æ—Å–Ω–æ–≤—É –±–µ—Ä–µ—Ç—Å—è —Ç–æ—Ç —Ñ–∞–∫—Ç, –±–æ–ª—å—à–µ –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –∫–æ—Ç–æ—Ä—ã–π –º—ã –∏—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —ç—Ç–æ–≥–æ
(–Ω—É –∏ –¥—Ä—É–≥–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤) –º—ã –≤—ã—á–∏—Å–ª—è–µ–º –≥–¥–µ –∏—Å–∫–∞—Ç—å –¥–∞–ª—å—à–µ.

-- –î–û–ö–ê–ó–ê–¢–ï–õ–¨–°–¢–í–û –ö–û–†–†–ï–ö–¢–ù–û–°–¢–ò --

BrokenSearch2
–∫–æ–≥–¥–∞ –º—ã –≤—ã—á–∏—Å–ª–∏–ª–∏ —Å–∞–º—ã–π –º–∞–ª–µ–Ω—å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, –∞ –æ–Ω –±—É–¥–µ—Ç –≤—Å–µ–≥–¥–∞, —Ç–æ –º—ã —Å–¥–≤–∏–≥–∞–µ–º –Ω–∞—à—É —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –Ω–∞ —Å–¥–≤–∏–≥ –º–∞—Å—Å–∏–≤–∞
–Ω–∞–ø—Ä–∏–º–µ—Ä –¥–ª—è –º–∞—Å—Å–∏–≤–∞ [4,5,6,7,8,9,1,2,3] –º—ã –≤—ã—á–∏—Å–ª–∏–ª–∏, —á—Ç–æ —Å–∞–º—ã–π –º–∞–ª–µ–Ω—å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç, –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ –∏–Ω–¥–µ–∫—Å—É 6, –∫–æ–≥–¥–∞ –º—ã –≤–æ–∑—å–º–µ–º –Ω–∞—à–µ –ø–µ—Ä–≤–æ–µ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ
(0 + 9) / 2 = 4, –∏–Ω–¥–µ–∫—Å 4 —Å–µ–π—á–∞—Å —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ 8, –Ω–æ –∫ —ç—Ç–æ–π 4 –º—ã –ø—Ä–∏–±–∞–≤–∏–º 6 –∏ –ø–æ–ª—É—á–∏–º –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç 9 - (4 + 6) % 9 = 1. –ò–Ω–¥–µ–∫—Å 1 —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ 4,
—á—Ç–æ –∏ –±—ã–ª–æ –±—ã —Ü–µ–Ω—Ç—Ä–æ–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –º–∞—Å—Å–∏–≤–µ

BrokenSearch
—Ç—É—Ç –≤—Å–µ –Ω–µ–º–Ω–æ–≥–æ —Å–ª–æ–∂–Ω–µ–µ :D


–¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ –≤–æ–∑—å–º–µ–º –º–∞—Å—Å–∏–≤
[7,8,9,10,1,2,3,4,5,6]

–ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ > k && k > –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ {
–∏—Å–∫–æ–º–æ–µ —á–∏—Å–ª–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∞–≤–µ–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ —Å–ø—Ä–∞–≤–∞ –º–µ–Ω—å—à–µ —á–µ–º k
—Ç–æ —Ç–æ–≥–¥–∞ –∏–¥–µ–º –ª–µ–≤–µ–µ
–ø—Ä–∏–º–µ—Ä:
k = 9
guess = 10
–º—ã —Ç–µ–ø–µ—Ä—å –∏—â–µ–º –≤ [7,8,9]
}

–ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ > k && k < –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ {
–ø–ª–æ—Ö–æ–π –∏—Å—Ö–æ–¥, —Ç–∞–∫ –∫–∞–∫ –µ—Å–ª–∏ k –º–µ–Ω—å—à–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞, —Ç–æ —á–∏—Å–ª–∞ –±–æ–ª—å—à–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∫–∞–∫ —Å–ª–µ–≤–∞, —Ç–∞–∫ –∏ —Å–ø—Ä–∞–≤–∞
–ø—Ä–∏–¥–µ—Ç—Å—è –¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É
–ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ > –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ {
–∏—â–µ–º –≤ –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏
–ø—Ä–∏–º–µ—Ä:
k = 5
guess = 10
–º—ã —Ç–µ–ø–µ—Ä—å –∏—â–µ–º –≤ [1,2,3,4,5,6]
} –í –∏–Ω–æ–º —Å–ª—É—á–∞–µ {
–∏—â–µ–º –≤ –ª–µ–≤–æ–π —á–∞—Å—Ç–∏
–ø—Ä–∏–º–µ—Ä:
k = 5
guess 6
–º—ã —Ç–µ–ø–µ—Ä—å –∏—â–µ–º –≤ [7,8,9,10,1,2,3,4,5]
}
}

–ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ < k && k > –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ {
–ø–ª–æ—Ö–æ–π –∏—Å—Ö–æ–¥, —Ç–∞–∫ –∫–∞–∫ –µ—Å–ª–∏ k –±–æ–ª—å—à–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞, —Ç–æ —á–∏—Å–ª–∞ –º–µ–Ω—å—à–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∫–∞–∫ —Å–ª–µ–≤–∞, —Ç–∞–∫ –∏ —Å–ø—Ä–∞–≤–∞
–ø–ª–æ—Ö–æ–π –∏—Å—Ö–æ–¥, –ø—Ä–∏–¥–µ—Ç—Å—è –¥–µ–ª–∞—Ç—å –¥–≤–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
–ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ < –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ {
–∏—â–µ–º –≤ –ª–µ–≤–æ–π —á–∞—Å—Ç–∏
–ø—Ä–∏–º–µ—Ä:
k = 10
guess = 2
–º—ã —Ç–µ–ø–µ—Ä—å –∏—â–µ–º –≤ [7,8,9,10,1]
} –í –∏–Ω–æ–º —Å–ª—É—á–∞–µ {
–∏—â–µ–º –≤ –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏
–ø—Ä–∏–º–µ—Ä:
k = 10
guess 7
–º—ã —Ç–µ–ø–µ—Ä—å –∏—â–µ–º –≤ [8,9,10,1,2,3,4,5,6]
}

—Ç–æ —Ç–æ–≥–¥–∞ –º—ã –∏—â–µ–º –ø—Ä–∞–≤–µ–µ
–ø—Ä–∏–º–µ—Ä:
k = 9
guess = 8
–º—ã —Ç–µ–ø–µ—Ä—å –∏—â–µ–º –≤ [9,10,1,2,3,4,5,6]
}



–ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ < k && k < –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ {
–µ—Å–ª–∏ k < –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, —Ç–æ —á–∏—Å–ª–∞ –º–µ–Ω—å—à–µ k –º–æ–≥—É—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ —Å–ø—Ä–∞–≤–∞
—Ç–æ —Ç–æ–≥–¥–∞ –∏—â–µ–º —Å–ª–µ–≤–∞
–ø—Ä–∏–º–µ—Ä k = 4
guess = 3
–º—ã —Ç–µ–ø–µ—Ä—å –∏—â–µ–º –≤ [,4,5,6]
}
-- –í–†–ï–ú–ï–ù–ù–ê–Ø –°–õ–û–ñ–ù–û–°–¢–¨ --

BrokenSearch2 —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞ O(log n + log n) —Ç–∞–∫ –∫–∞–∫ –¥–µ–ª–∞–µ—Ç 2 –±–∏–Ω–∞—Ä–Ω—ã—Ö –ø–æ–∏—Å–∫–∞

BrokenSearch —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞ O(log n), –æ–Ω –¥–µ–ª–∞–µ—Ç –≤—Å–µ–≥–æ –æ–¥–∏–Ω –±–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫

-- –ü–†–û–°–¢–†–ê–ù–°–¢–í–ï–ù–ù–ê–Ø –°–õ–û–ñ–ù–û–°–¢–¨ --

–æ–±–∞ —Ä–µ—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –∑–∞ O(1)


== –∑—ã ==
–∏–∑-–∑–∞ —Ä–∞–∑–Ω—ã—Ö –ø—Ä–∏–∫–æ–ª–æ–≤ –≤ –∂–∏–∑–Ω–∏ –∏ —Å–¥–∞—á–∏ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Ä–∞–±–æ—Ç–µ —è –æ–ø–∞–∑–¥—ã–≤–∞—é –∫ –∂–µ—Å—Ç–∫–æ–º—É –¥–µ–¥–ª–∞–π–Ω—É, —è –æ—Ç—Å—ã–ª–∞—é —ç—Ç–æ 20 —á–∏—Å–ª–∞, –∞ —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è 4–≥–æ —Å–ø—Ä–∏–Ω—Ç–∞ –º–Ω–µ –Ω—É–∂–Ω–æ —Å–¥–∞—Ç—å —É–∂–µ 28, –µ—Å—Ç—å —à–∞–Ω—Å —Ç–æ–≥–æ
—á—Ç–æ —è –æ—Å—Ç–∞–Ω—É—Å—å –Ω–∞ "–≤—Ç–æ—Ä–æ–π –≥–æ–¥" :D —è –ø—Ä–æ—Å—Ç–æ –Ω–µ –∑–Ω–∞—é –º–µ–Ω—è—é—Ç—Å—è –ª–∏ —Ä–µ–≤—å—é–µ—Ä—ã, –Ω–æ –µ—Å–ª–∏ –º–µ–Ω—è—é—Ç—Å—è, —Ç–æ —Å–ø–∞—Å–∏–±–æ –≤–∞–º –±–æ–ª—å—à–æ–µ! –ö–∞–∫ –º–∏–Ω–∏–º—É–º—É –±–ª–∞–≥–æ–¥–∞—Ä—è –≤–∞–º —è —É–∑–Ω–∞–ª —á—Ç–æ —Ä–µ–≥—É–ª—è—Ä–∫–∏ —ç—Ç–æ –º–µ–¥–ª–µ–Ω–Ω–æ,
–∏ –Ω–∞—á–∞–ª –¥–µ–ª–∞—Ç—å —Ç–µ—Å—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ, –∫—Å—Ç–∞—Ç–∏, –∏–¥—É—Ç –≤ –∫–æ–º–ø–ª–µ–∫—Ç–µ —Å —ç—Ç–∏–º —Ñ–∞–π–ª–æ–º üòé
*/

package brokenarray

import (
	"math"
)

func BrokenSearch(arr []int, k int) int {
	// –≥–ª–∞–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞. –ï—Å–ª–∏ –∏—Å–∫–æ–º–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ, —á–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, —Ç–æ, —É—Å–ª–æ–≤–Ω–æ, –º—ã –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å –≤ –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏, –µ—Å–ª–∏ –Ω–µ—Ç - –≤ –ª–µ–≤–æ–π
	isKHigerThenLastElement := k > arr[len(arr)-1]
	result := -1
	start := 0
	end := len(arr)
	// –µ—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∑–∞ –ª–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–æ–µ –≤—Ä–µ–º—è, –∑–Ω–∞—á–∏—Ç –µ–≥–æ –Ω–µ—Ç –∏ result –æ—Å—Ç–∞–µ—Ç—Å—è -1
	logArrLenght := int(math.Log2(float64(len(arr))))
	for i := 0; i <= logArrLenght; i++ {
		// —á–∞—Å—Ç–æ –∑–∞–º–µ—á–∞–ª –≤ –∏—Å—Ö–æ–¥–Ω–∏–∫–∞—Ö –≥–æ, —á—Ç–æ —Ç–∞–º –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ 2 –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —Å –ø–æ–º–æ—â—å—é —à–∏—Ñ—Ç–∞ –≤–ø—Ä–∞–≤–æ
		// –º–æ–∂–µ—Ç —ç—Ç–æ –±—ã—Å—Ç—Ä–µ–µ —á–µ–º –æ–±—ã—á–Ω–æ–µ –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ 2? –Ø –Ω–µ –∑–Ω–∞—é :D –ü—Ä–æ—Å—Ç–æ –∫–æ–ø–∏—Ä—É—é)
		middle := (start + end) >> 1
		if arr[middle] == k {
			result = middle
			break
		}
		if arr[middle] > k {
			if isKHigerThenLastElement {
				end = middle
			} else {
				if arr[middle] > arr[len(arr)-1] {
					start = middle
				} else {
					end = middle
				}
			}
		} else {
			if isKHigerThenLastElement {
				if arr[middle] < arr[len(arr)-1] {
					end = middle
				} else {
					start = middle
				}
			} else {
				start = middle
			}
		}
	}

	return result
}

func BrokenSearch2(arr []int, k int) int {
	// Your code
	// ‚Äú„ÉΩ(¬¥‚ñΩÔΩÄ)„Éé‚Äù
	arrStart := 0
	if len(arr) == 1 {
		if arr[0] == k {
			return 0
		} else {
			return -1
		}
	}
	// –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ç–æ, —á—Ç–æ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞ –≤ —Å–∞–º–æ–º –∫–æ–Ω—Ü–µ –ø–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–æ O(1) –∏ –º—ã –º–æ–∂–µ–º —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –≤—Ä–µ–º—è
	if arr[len(arr)-1] < arr[len(arr)-2] {
		arrStart = len(arr) - 1
		// –ø–æ—Ç–æ–º –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–∞—Å—Å–∏–≤ —Å–±–∏–ª—Å—è, –µ—Å–ª–∏ –Ω–µ —Å–∏–±–ª—Å—è —Ç–æ arrStart –æ—Å—Ç–∞–µ—Ç—Å—è 0
	} else if arr[len(arr)-1] < arr[0] {
		start := 0
		end := len(arr)
		for arrStart == 0 {
			guess := (start + end) >> 1
			if arr[guess] < arr[len(arr)-1] {
				if arr[guess] < arr[guess-1] {
					arrStart = guess
				} else {
					end = guess
				}
			} else {
				start = guess
			}
		}
	}

	result := -1
	start := 0
	end := len(arr)
	// –µ—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∑–∞ –ª–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–æ–µ –≤—Ä–µ–º—è, –∑–Ω–∞—á–∏—Ç –µ–≥–æ –Ω–µ—Ç
	logArrLenght := int(math.Log2(float64(len(arr))))
	for i := 0; i <= logArrLenght; i++ {
		guess := (start + end) >> 1
		fixedGuess := ((guess + arrStart) % len(arr))
		if arr[fixedGuess] == k {
			result = fixedGuess
			break
		}
		if arr[fixedGuess] < k {
			start = guess
		} else {
			end = guess
		}

	}

	return result
}
